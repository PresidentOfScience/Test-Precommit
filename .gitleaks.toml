# Rules instruct gitleaks on what should be considered a secret.
# Allowlists instruct gitleaks on what is allowed, i.e. not a secret.

title = "gitleaks config"

[extend]
useDefault = true

[allowlist]
description = "global allow lists"
regexes = [
    '''(?i)^true|false|null$''',
    '''^(?i:a+|b+|c+|d+|e+|f+|g+|h+|i+|j+|k+|l+|m+|n+|o+|p+|q+|r+|s+|t+|u+|v+|w+|x+|y+|z+|\*+|\.+)$''',
    '''^\$(\d+|{\d+})$''',
    '''^\$([A-Z_]+|[a-z_]+)$''',
    '''^\${([A-Z_]+|[a-z_]+)}$''',
    '''^\{\{[ \t]*[\w ().|]+[ \t]*}}$''',
    '''^\$\{\{[ \t]*((env|github|secrets|vars)(\.[A-Za-z]\w+)+[\w "'&./=|]*)[ \t]*}}$''',
    '''^%([A-Z_]+|[a-z_]+)%$''',
    '''^%[+\-# 0]?[bcdeEfFgGoOpqstTUvxX]$''',
    '''^\{\d{0,2}}$''',
    '''^@([A-Z_]+|[a-z_]+)@$''',
    '''(?i)password\s*[:=]\s*env\(''',
]

#
# CUSTOM RULES
#

# 1. Password assignments
[[rules]]
id = "generic-password"
description = "Generic password assignment (hardcoded values)"
regex = '''(?i)(password|passwd|pwd|secret)\s*['"]?\s*[:=>\-]+\s*['"][A-Za-z0-9!@#$%^&*()_+\-={}\[\]:;'",.<>?]{4,}['"]'''
tags = ["password", "secret"]

# 2. Database connection strings
[[rules]]
id = "db-connection-string"
description = "Database connection string with credentials"
regex = '''[a-zA-Z]+:\/\/[A-Za-z0-9._%+-]+:[^@]+@[A-Za-z0-9._%+-]+(:[0-9]+)?\/[A-Za-z0-9._%+-]+'''
tags = ["db", "connection", "credentials"]

# 3. Hardcoded JWT tokens
[[rules]]
id = "jwt-token"
description = "Hardcoded JWT token"
regex = '''eyJ[A-Za-z0-9_-]{10,}\.[A-Za-z0-9._-]{10,}\.[A-Za-z0-9._-]{10,}'''
tags = ["jwt", "token"]

# 4. Private key blocks
[[rules]]
id = "private-key"
description = "Private key material"
regex = '''-----BEGIN (EC|RSA|DSA|PGP|OPENSSH) PRIVATE KEY-----'''
tags = ["key", "private"]

# 5. API keys in JS/TS/PHP
[[rules]]
id = "api-key-assignment"
description = "Generic API key pattern (frontend/backend)"
regex = '''(?i)(api[_-]?key|client[_-]?secret|auth[_-]?token)\s*[:=]\s*['"][A-Za-z0-9_\-]{12,}['"]'''
tags = ["api", "key", "secret"]

# 6. Email with password nearby (common in Laravel seeds / tests)
[[rules]]
id = "email-password-pair"
description = "Email + password combo in code"
regex = '''[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\s*[,;:\t ]+\s*['"]?[A-Za-z0-9!@#$%^&*()_+]{6,}['"]?'''
tags = ["email", "password"]

# 7. OpenAI API Keys (sk- prefix)
[[rules]]
id = "openai-api-key"
description = "OpenAI API key pattern"
regex = '''sk-[a-zA-Z0-9]{48}'''
tags = ["api", "key", "openai"]

# 8. Generic API key patterns (regardless of variable name)
[[rules]]
id = "generic-api-key-pattern"
description = "Generic API key patterns based on content"
regex = '''['"][a-zA-Z0-9_-]{32,}['"]'''
tags = ["api", "key", "generic"]

# 9. Strong password patterns (regardless of variable name)
[[rules]]
id = "strong-password-pattern"
description = "Strong password patterns with mixed characters"
regex = '''['"][A-Za-z0-9!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\?]{12,}['"]'''
tags = ["password", "strong"]

# 10. AWS Access Key pattern
[[rules]]
id = "aws-access-key"
description = "AWS Access Key ID pattern"
regex = '''AKIA[0-9A-Z]{16}'''
tags = ["aws", "key", "access"]

# 11. SSH key content pattern (regardless of variable name)
[[rules]]
id = "ssh-key-content"
description = "SSH key content pattern"
regex = '''['"]ssh-rsa\s+[A-Za-z0-9+/=]+(\s+\S*)?['"]'''
tags = ["ssh", "key", "content"]
